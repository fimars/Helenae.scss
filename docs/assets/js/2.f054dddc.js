(window.__LOADABLE_LOADED_CHUNKS__=window.__LOADABLE_LOADED_CHUNKS__||[]).push([[2],{25:function(n,a,s){"use strict";s.r(a);var t=s(0),e=s.n(t),o=s(58),p=s.n(o);a.default=function(){return e.a.createElement(p.a,{renderContent:function(){return e.a.createElement("div",{className:"markdown-body section",dangerouslySetInnerHTML:{__html:'<h1 id="如何使用">如何使用</h1>\n<h2 id="安装">安装</h2>\n<h3 id="nodejs">Node.js</h3>\n<p>运行以下命令确认你的 Node.js 版本</p>\n<pre><code class="language-bash">node -v</code></pre>\n<p>如果你没有安装 Node.js 在<a href="https://nodejs.org/en/download/">此处下载</a></p>\n<h3 id="helldoccli">@helldoc/cli</h3>\n<p>使用 <code>npm</code> 或者 <code>yarn</code> 安装<code>@helldoc/cli</code>脚手架:</p>\n<pre><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> @helldoc/cli -g\n<span class="token comment"># or</span>\n<span class="token function">yarn</span> global <span class="token function">add</span> @helldoc/cli</code></pre>\n<p>确认是否安装完成之后，让我们继续把。</p>\n<pre><code>helldoc -h</code></pre><h2 id="第一篇文章">第一篇文章</h2>\n<h3 id="readmemd">README.md</h3>\n<p>在你的工作目录下新建一个 <code>README.md</code></p>\n<pre><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> Hello World</span>\n\nPower by HellDoc.</code></pre>\n<p>在当前目录通过<code>dev</code>指令启动本地服务:</p>\n<pre><code class="language-bash">helldoc dev</code></pre>\n<p>访问提示的命令行输出的默认端口地址 <a href="localhost:8000">localhost:8000</a>，你就可以看到你的文档服务了。</p>\n<blockquote>\n<p>TIPS: 在 HellDoc 中，README.md 是当成网站的主页直接通过<code>/</code>访问的</p>\n</blockquote>\n<h3 id="hellconfigjs"><code>hell.config.js</code></h3>\n<p>再添加一个 <code>Yay.md</code> 在当前目录下:</p>\n<pre><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> Yay</span>\n\n<span class="token title important"><span class="token punctuation">##</span> Hello, Yay.</span></code></pre>\n<p><code>HellDoc</code> 会通过文档的名字生成对应的路由, 这一篇文章可以通过 <a href="localhost:8000/Yay">localhost:8000/Yay</a> 访问到!</p>\n<p>让我们更进一步——为了得到更加友好的体验，<code>HellDoc</code>提供了一个调整网站细节的配置入口。</p>\n<p>在当前目录下新建一个<code>hell.config.js</code>:</p>\n<pre><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 网站标题</span>\n  title<span class="token punctuation">:</span> <span class="token string">"My First HellDoc Document."</span><span class="token punctuation">,</span>\n  <span class="token comment">// 网站head标签信息</span>\n  head<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"link"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> rel<span class="token punctuation">:</span> <span class="token string">"icon"</span><span class="token punctuation">,</span> href<span class="token punctuation">:</span> <span class="token string">"./favicon.png"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// 皮肤设置</span>\n  themeConfig<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 导航栏信息</span>\n    nav<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">"Hell"</span><span class="token punctuation">,</span> link<span class="token punctuation">:</span> <span class="token string">"/"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">"Yayyyyyy"</span><span class="token punctuation">,</span> link<span class="token punctuation">:</span> <span class="token string">"/Yay"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>😏 到这里，你就得到了一个交互不错的文档站点。</p>\n<h2 id="部署到-github-pages">部署到 Github Pages</h2>\n<h3 id="设置-base-信息">设置 base 信息</h3>\n<p>首先需要根据 repo 信息修改一下<code>hell.config.js</code>:</p>\n<pre><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  base<span class="token punctuation">:</span> <span class="token string">"你的repo名字"</span><span class="token punctuation">,</span>\n  dest<span class="token punctuation">:</span> <span class="token string">"打包后输出的静态文件目录"</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>这样，<code>HellDoc</code> 的前端路由地址就能够正常工作。</p>\n<p>在当前目录通过<code>prod</code>指令生成静态文件:</p>\n<pre><code>helldoc prod</code></pre><p>最后把你生成的结果提交上去就可以了。</p>\n<h2 id="example">Example</h2>\n<h3 id="author-blog">Author Blog</h3>\n<p>这里有一个<a href="https://github.com/fimars/saki">例子</a>可以作为参考</p>\n'}})}})}},58:function(n,a,s){"use strict";var t=this&&this.__assign||function(){return(t=Object.assign||function(n){for(var a,s=1,t=arguments.length;s<t;s++)for(var e in a=arguments[s])Object.prototype.hasOwnProperty.call(a,e)&&(n[e]=a[e]);return n}).apply(this,arguments)},e=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};a.__esModule=!0;var o=s(22),p=s(12),c=s(6),l=s(0),u=e(s(0));a.default=c.withRouter((function(n){var a=p.siteData.pages.find((function(a){return a.path===n.match.path}))||{path:"",component:""};l.useEffect((function(){a.title&&(console.log(a.title),document.title=a.title)}));var s,e=p.layouts[(s="Layout",a.frontmatter&&a.frontmatter.layout&&(s=a.frontmatter.layout),s)];return u.default.createElement(o.PageDataContext.Provider,{value:a},u.default.createElement(e,t({},n)))}))}}]);